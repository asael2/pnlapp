"use strict";var ApplicationConfiguration=function(){var applicationModuleName="ViveBien",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("elearning"),ApplicationConfiguration.registerModule("emodule"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Elegidos","learn","glyphicon glyphicon-heart"),Menus.addMenuItem("topbar","Articulos","articles","glyphicon glyphicon-list"),Menus.addMenuItem("topbar","Modulos","emodules","glyphicon glyphicon-th"),Menus.addMenuItem("topbar","Admin","adm","dropdown"," ",!0,["admin"]),Menus.addSubMenuItem("topbar","adm","Agregar Articulo","articles/create"),Menus.addSubMenuItem("topbar","adm","Agregar Modulo","emodule-create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles","Users","$http","Emodules",function($scope,$stateParams,$location,Authentication,Articles,Users,$http,Emodules){$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.myUser=new Users($scope.user),$scope.myUser.userArticles=$scope.user.userArticles,$scope.emodules=Emodules.query(),$scope.belongsToModule=[],$scope.create=function(){var article=new Articles({title:this.title,content:this.content,arType:this.arType,skills:this.skills,resource:this.resource,status:this.status,belongsToModule:this.belongsToModule});article.$save(function(response){$location.path("articles/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.content="",this.arType="",this.skills="",this.resource="",this.status="",this.belongsToModule=""},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})},$scope.filterAlreadyAdded=function(item){return-1==$scope.myUser.userArticles.indexOf(item._id)},$scope.selectionsChanged=function(elementId){$scope.belongsToModule=[],$scope.belongsToModule.push(elementId),console.log("belongsToModule : "+$scope.belongsToModule)}}]),angular.module("users").controller("MyArticlesController",["$scope","Articles","Users","$location",function($scope){$scope.addArt2me=function($index,elArticulo){var myArticle=elArticulo,indice=$index;$scope.myUser.userArticles.indexOf(myArticle._id)>-1?alert("Ya en array"):($scope.myUser.userArticles.unshift(myArticle._id),$scope.myUser.$update(function(){console.log("Actualize!! con : "+$scope.myUser.userArticles),$scope.articles.splice(indice,1)},function(errorResponse){console.log("updatError: "+myArticle._id+errorResponse.data),$scope.error=errorResponse}))},$scope.remArt2me=function($index,elArticulo,$event){$event.preventDefault();var myArticle=elArticulo,myArtPosition=$scope.myUser.userArticles.indexOf(myArticle._id),indice=$index;$scope.myUser.userArticles.splice(myArtPosition,1),$scope.myUser.$update(function(){$scope.misArticulos.splice(indice,1)},function(errorResponse){console.log("updatError: "+myArticle._id+errorResponse.data),$scope.error=errorResponse})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$location",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","$location",function($scope,Authentication,$location){$scope.authentication=Authentication,$location.path($scope.authentication.user?"/learn":"/");var header=document.querySelector("header");$scope.header=angular.element(header),$scope.header.hidden=!0,console.log($scope.header)}]),angular.module("core").controller("MyAuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.signup=function(){console.log("my controler signup"),$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/#!/learn")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){console.log("my controler signin"),$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/learn")}).error(function(response){$scope.error=response.message})}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.admintRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("elearning").config(["$stateProvider",function($stateProvider){$stateProvider.state("article-audio",{url:"/audio/:articleId",templateUrl:"modules/elearning/views/article-audio.client.view.html"}).state("article-video",{url:"/video/:articleId",templateUrl:"modules/elearning/views/article-video.client.view.html"}).state("article-text",{url:"/texto/:articleId",templateUrl:"modules/elearning/views/article-text.client.view.html"}).state("learnroute",{url:"/learn",templateUrl:"modules/elearning/views/learnroute.client.view.html"})}]),angular.module("elearning").controller("ArticleAudioController",["$rootScope","$scope","$stateParams","$location","Authentication","Articles",function($rootScope,$scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("elearning").controller("ArticleTextController",["$rootScope","$scope","$stateParams","$location","Authentication","Articles",function($rootScope,$scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})},$scope.vibrate=function(vibrate,wait,vibrate2){navigator.vibrate=navigator.vibrate||navigator.webkitVibrate||navigator.mozVibrate||navigator.msVibrate,navigator.vibrate&&navigator.vibrate([vibrate2])},$scope.finishedArticle=function(){console.log("Article finished!"),$scope.vibrate(300,600,600),$scope.article.status=1,$scope.statusIcon="glyphicon-ok"},$scope.fastReader=function(){function changeSpeed(self){speed=parseInt(self.value)+parseInt(speed),delay=speed/parseInt(self.value,10),$scope.sliderValue=buttonSlider.value}function processWord(word){var center=Math.floor(word.length/2),letters=word.split("");return letters.map(function(letter,idx){return idx===center?'<span class="highlight">'+letter+"</span>":letter}).join("")}function positionWord(){var wordEl=readerEl.firstElementChild,highlight=wordEl.firstElementChild,centerOffsetX=highlight.offsetWidth/2+highlight.offsetLeft,centerOffsetY=highlight.offsetHeight/2+highlight.offsetTop;wordEl.style.left=readerEl.clientWidth/2-centerOffsetX+"px",wordEl.style.top=readerEl.clientHeight/2-centerOffsetY+"px"}var commentEl=document.querySelector("#comment"),readerEl=document.querySelector("#reader"),buttonSlider=document.querySelector("#wpm"),buttonStart=document.querySelector("#start"),buttonPause=document.querySelector("#pause"),buttonPlay=document.querySelector("#play"),speed=6e4,currentTimer=null,sliderValue=parseInt(buttonSlider.value,10),delay=speed/sliderValue;$scope.sliderValue=buttonSlider.value,buttonSlider.addEventListener("change",function(){self=this,changeSpeed(self)}),buttonStart.addEventListener("click",function(){$scope.startReader()}),buttonPause.addEventListener("click",function(){$scope.pauseReader()}),buttonPlay.addEventListener("click",function(){$scope.playReader?$scope.playReader():$scope.startReader()}),$scope.startReader=function(){var words=commentEl.textContent.split(/\s+/).map(processWord),currentWord=0;$scope.playReader=function(){var word=words[currentWord++],hasPause=/^\(|[,\;\:\)]$/.test(word),hasPoint=/^\(|[\.\)]$/.test(word);readerEl.firstElementChild.innerHTML=word,positionWord(),currentWord!==words.length?currentTimer=setTimeout($scope.playReader,delay*(hasPause?3:hasPoint?5:1)):$scope.$apply(function(){$scope.isPlaying=0,$scope.finishedArticle()}),$scope.progressBar(currentWord,words),$scope.$apply(function(){$scope.isPlaying=1})},$scope.pauseReader=function(){console.log("pauseReader"),clearTimeout(currentTimer),0==$scope.isPlaying&&$scope.playReader(),$scope.$apply(function(){$scope.isPlaying=0})},clearTimeout(currentTimer),$scope.playReader()},$scope.progressBar=function(currentWord,words){$scope.$apply(function(){$scope.readProgress=currentWord/words.length*100})},$scope.speedLess=function(){buttonSlider.stepDown(4),changeSpeed(buttonSlider)},$scope.speedMore=function(){buttonSlider.stepUp(4),changeSpeed(buttonSlider)}}}]),angular.module("elearning").controller("ArticleVideoController",["$rootScope","$scope","$stateParams","$location","Authentication","Articles",function($rootScope,$scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("elearning").directive("unvideo",["$sce",function($sce){return{restrict:"EA",scope:{code:"="},replace:!0,template:'<div style="height:400px;"><iframe style="overflow:hidden;height:100%;width:100%" width="100%" height="100%" src="{{url}}" frameborder="0" allowfullscreen></iframe></div>',link:function(scope){scope.$watch("code",function(newVal){newVal&&(scope.url=$sce.trustAsResourceUrl("http://www.youtube.com/embed/"+newVal))})}}}]),angular.module("articles").controller("LearnrouteController",["$scope","$stateParams","$location","Authentication","Articles","Users",function($scope,$stateParams,$location,Authentication,Articles,Users){$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.myUser=new Users($scope.user),$scope.misArticulos=[],$scope.find=function(){for(var myArticlesArray=$scope.user.userArticles,i=0;i<myArticlesArray.length;i++)$scope.misArticulos[i]=Articles.get({articleId:myArticlesArray[i]})}}]),angular.module("elearning").factory("Emoduleservice",[function(){return{someMethod:function(){return!0}}}]),angular.module("emodule").config(["$stateProvider",function($stateProvider){$stateProvider.state("emodules-emodule",{url:"/emodules/:emoduleId",templateUrl:"modules/emodule/views/emodules-emodule.client.view.html"}).state("emodules-list",{url:"/emodules",templateUrl:"modules/emodule/views/emodules-list.client.view.html"}).state("emodule-create",{url:"/emodule-create",templateUrl:"modules/emodule/views/emodule-create.client.view.html"})}]),angular.module("emodule").controller("EmodulesController",["$scope","Emodules","$stateParams","Articles",function($scope,Emodules,$stateParams,Articles){$scope.findAll=function(){$scope.emodules=Emodules.query(),$scope.articles=Articles.query()}}]).controller("EmoduleCreateController",["$scope","$stateParams","$location","Authentication","Articles","Users","$http","Emodules",function($scope,$stateParams,$location,Authentication,Articles,Users,$http,Emodules){$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.create=function(){var emodule=new Emodules({name:this.name,parent:this.parent,child:this.child,status:this.status,categories:this.categories,articlesArray:this.articlesArray,descripcion:this.descripcion});emodule.$save(function(response){$location.path("emodules/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name="",this.parent="",this.child="",this.status="",this.categories="",this.articlesArray="",this.descripcion=""}}]),angular.module("emodule").factory("Emodules",["$resource",function($resource){return $resource("emodules/:emoduleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);